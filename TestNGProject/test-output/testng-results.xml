<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-31T11:00:48 IST" name="Regression Suite" finished-at="2023-08-31T11:00:48 IST" duration-ms="87">
    <groups>
    </groups>
    <test started-at="2023-08-31T11:00:48 IST" name="Payment Module" finished-at="2023-08-31T11:00:48 IST" duration-ms="87">
      <class name="payment.Testing2">
        <test-method is-config="true" signature="beforeCLass()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="beforeCLass" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeCLass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="beforeMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="test1" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="afterMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="beforeMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="test2" finished-at="2023-08-31T11:00:48 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at payment.Testing2.test2(Testing2.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="afterMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:payment.Testing2@6a8658ff]" started-at="2023-08-31T11:00:48 IST" name="afterClass" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- payment.Testing2 -->
      <class name="payment.Testing">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="beforeSuite" finished-at="2023-08-31T11:00:48 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforePaymentModule()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="beforePaymentModule" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePaymentModule -->
        <test-method is-config="true" signature="beforeCLass()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="beforeCLass" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeCLass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="beforeMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="test1" finished-at="2023-08-31T11:00:48 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="afterMethod" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="afterClass" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterPaymentModule()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="afterPaymentModule" finished-at="2023-08-31T11:00:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPaymentModule -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:payment.Testing@5e7cd6cc]" started-at="2023-08-31T11:00:48 IST" name="afterSuite" finished-at="2023-08-31T11:00:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- payment.Testing -->
    </test> <!-- Payment Module -->
  </suite> <!-- Regression Suite -->
</testng-results>
